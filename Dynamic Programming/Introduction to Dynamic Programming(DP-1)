//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++
vector<long long int>dp(100001, 0);

class Solution {
    private:
    long long topDownHelper(int n,long long int mod, vector<long long int> &dyp)
    {
        if(n<=1)
        {return n;}
        if(dp[n]!=-1)
        {return dp[n];}
        
        return dp[n]=(topDownHelper(n-1,mod,dyp)+topDownHelper(n-2,mod,dyp))%mod;
    }
    
  public:
    long long int topDown(int n) 
    {
        long long int mod=1e9+7;
        vector<long long int> dyp(n+1,-1);
        return topDownHelper(n,mod,dyp);
    }
    
    long long int bottomUp(int n) 
    {
        long long mod=1e9+7;
        vector<long long int>dyp(n+1,0);
        dyp[0]=0;
        dyp[1]=1;
        for(int i=2;i<=n;i++)
        {
            dyp[i]=(dyp[i-1]+dyp[i-2])%mod;
        }
        return dyp[n]%mod;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        for (int i = 0; i < 100001; i++) dp[i] = -1;
        int n;
        cin >> n;
        Solution obj;
        long long int topDownans = obj.topDown(n);
        long long int bottomUpans = obj.bottomUp(n);
        if (topDownans != bottomUpans) cout << -1 << "\n";
        cout << topDownans << "\n";
    }
}
// } Driver Code Ends
